# ------------------------------------------------------------
# .gitignore 使用說明與範例
#
# 語法規則：
# - 一行一個規則，空行會被忽略
# - # 開頭為註解
# - 開頭的 / 表示相對於本檔所在目錄
# - 結尾的 / 表示忽略整個資料夾
# - *   匹配零個或多個任意字元
# - ?   匹配任意單一字元
# - []  匹配中括號內任一字元或範圍
# - **  匹配多層目錄
# - !   反向匹配（取消忽略。注意目錄一定要搭配**否則無效）
#
# 注意事項：
# 1. 只影響未被追蹤的檔案，已追蹤需先 `git rm --cached` 才會生效
# 2. 可在子目錄放置 .gitignore，規則只影響該目錄及子目錄
#
# 關於目錄忽略與 `!` 的關係：
# - tmp/      → 忽略任何層級中名為 tmp 的資料夾及其內容（包含資料夾本身）
#               例如 logs/tmp、a/b/c/tmp、/d/e/tmp 都會被忽略
#               ⚠️ 因為資料夾本身被忽略，`!tmp/keep/` 無法救回裡面的東西
# - /tmp/     → 只忽略專案根目錄下的 tmp 資料夾及其內容
# - tmp/**    → 忽略任何層級中名為 tmp 的資料夾內所有層級的內容，但不忽略資料夾本身
#               ✅ 可搭配 `!tmp/keep/` 保留部分內容
# - /tmp/**   → 忽略專案根目錄下 tmp 資料夾內所有層級的內容，但不忽略資料夾本身
#               ✅ 可搭配 `!/tmp/keep/` 保留部分內容
#
# 範例：
# 忽略所有 .log 檔
# *.log
#
# 使用 [] 範例：
# file[0-9].txt  → 忽略 file0.txt ~ file9.txt
#
# 忽略所有 tmp 資料夾及其內容（任何層級）
# tmp/
#
# 忽略 tmp 資料夾內所有層級的內容，但保留 keep 資料夾
# tmp/**
# !tmp/keep/
#
# 忽略根目錄 tmp 內容，但保留 keep 資料夾
# /tmp/**
# !/tmp/keep/
#
# 忽略所有 .env 檔，但保留 .env.example
# .env
# !.env.example
#
# 忽略系統檔案
# .DS_Store
# Thumbs.db
#
# 忽略編譯輸出
# /dist/
# /out/
# /bin/
# /obj/
#
# 忽略相依套件
# /node_modules/
# /vendor/
#
# 忽略 IDE/編輯器設定
# .vscode/
# .idea/
# *.iml
# ------------------------------------------------------------
/backup/
dump-files-output.txt
rar
unrar
